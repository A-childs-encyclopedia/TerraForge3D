# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

RESCOMP = windres
DEFINES += -DTERR3D_WIN32
INCLUDES += -Isrc -Iinclude -I../../TerraForge3D/vendor/imgui -I../../TerraForge3D/vendor/Glad/include -I../../TerraForge3D/vendor/GLFW/include -I../../TerraForge3D/vendor/dirent -I../../TerraForge3D/vendor/zip/src
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug)
TARGETDIR = bin/Debug-linux-x86_64/ModuleMaker
TARGET = $(TARGETDIR)/ModuleMaker
OBJDIR = bin-int/Debug-linux-x86_64/ModuleMaker
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -fPIC -g /MTd
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -fPIC -g -std=c++17 /MTd
LIBS += ../../TerraForge3D/vendor/imgui/bin/Debug-linux-x86_64/ImGui/libImGui.a ../../TerraForge3D/vendor/zip/bin/Debug-linux-x86_64/Zip/libZip.a ../../TerraForge3D/vendor/glad/bin/Debug-linux-x86_64/Glad/libGlad.a ../../TerraForge3D/vendor/glfw/bin/Debug-linux-x86_64/GLFW/libGLFW.a -lopengl32
LDDEPS += ../../TerraForge3D/vendor/imgui/bin/Debug-linux-x86_64/ImGui/libImGui.a ../../TerraForge3D/vendor/zip/bin/Debug-linux-x86_64/Zip/libZip.a ../../TerraForge3D/vendor/glad/bin/Debug-linux-x86_64/Glad/libGlad.a ../../TerraForge3D/vendor/glfw/bin/Debug-linux-x86_64/GLFW/libGLFW.a
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64

else ifeq ($(config),release)
TARGETDIR = bin/Release-linux-x86_64/ModuleMaker
TARGET = $(TARGETDIR)/ModuleMaker
OBJDIR = bin-int/Release-linux-x86_64/ModuleMaker
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -fPIC /MT
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -fPIC -std=c++17 /MT
LIBS += ../../TerraForge3D/vendor/imgui/bin/Release-linux-x86_64/ImGui/libImGui.a ../../TerraForge3D/vendor/zip/bin/Release-linux-x86_64/Zip/libZip.a ../../TerraForge3D/vendor/glad/bin/Release-linux-x86_64/Glad/libGlad.a ../../TerraForge3D/vendor/glfw/bin/Release-linux-x86_64/GLFW/libGLFW.a -lopengl32
LDDEPS += ../../TerraForge3D/vendor/imgui/bin/Release-linux-x86_64/ImGui/libImGui.a ../../TerraForge3D/vendor/zip/bin/Release-linux-x86_64/Zip/libZip.a ../../TerraForge3D/vendor/glad/bin/Release-linux-x86_64/Glad/libGlad.a ../../TerraForge3D/vendor/glfw/bin/Release-linux-x86_64/GLFW/libGLFW.a
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -s

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/Application.o
GENERATED += $(OBJDIR)/EntryPoint.o
GENERATED += $(OBJDIR)/ImGuiImplGLFW.o
GENERATED += $(OBJDIR)/ImGuiImplOpenGL.o
GENERATED += $(OBJDIR)/Main.o
GENERATED += $(OBJDIR)/QuickHack.o
GENERATED += $(OBJDIR)/UIFontManager.o
GENERATED += $(OBJDIR)/Window.o
OBJECTS += $(OBJDIR)/Application.o
OBJECTS += $(OBJDIR)/EntryPoint.o
OBJECTS += $(OBJDIR)/ImGuiImplGLFW.o
OBJECTS += $(OBJDIR)/ImGuiImplOpenGL.o
OBJECTS += $(OBJDIR)/Main.o
OBJECTS += $(OBJDIR)/QuickHack.o
OBJECTS += $(OBJDIR)/UIFontManager.o
OBJECTS += $(OBJDIR)/Window.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking ModuleMaker
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning ModuleMaker
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) rmdir /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/Application.o: src/Base/Application.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/EntryPoint.o: src/Base/EntryPoint.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ImGuiImplGLFW.o: src/Base/ImGuiImplGLFW.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ImGuiImplOpenGL.o: src/Base/ImGuiImplOpenGL.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/QuickHack.o: src/Base/QuickHack.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/UIFontManager.o: src/Base/UIFontManager.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Window.o: src/Base/Window.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Main.o: src/Main.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif